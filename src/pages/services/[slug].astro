---
// src/pages/services/[slug].astro
import Base from '@layouts/Base.astro';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import Button from '@components/Button.astro';
import { getCollection } from 'astro:content';

// 1) Pre-render all service slugs for static output
export async function getStaticPaths() {
  const services = await getCollection('services', ({ data }) => !data.draft);
  return services.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }, // available as Astro.props.entry
  }));
}

// 2) Receive the entry from props and render
const { entry } = Astro.props as { entry: any };
const { data } = entry;
const { Content } = await entry.render();

const site = Astro.site?.toString?.() || 'https://www.digissential.co.za';
const url = `${site}/services/${entry.slug}`;

const desc =
  (Array.isArray(data.bullets) && data.bullets[0]) ||
  data.summary ||
  `${data.title} in Stellenbosch.`;

// price can be number or string (e.g. "450")
const priceNum =
  typeof data.price === 'number'
    ? data.price
    : Number(String(data.price ?? '').replace(/[^\d.]/g, '')) || undefined;

const priceDisplay =
  typeof data.price === 'number'
    ? `R${data.price}`
    : (String(data.price ?? '').trim().match(/^r/i) ? String(data.price) : (priceNum ? `R${priceNum}` : ''));

// JSON-LD for Service (and FAQ if present)
const serviceLd = {
  '@context': 'https://schema.org',
  '@type': 'Service',
  '@id': `${url}#service`,
  name: data.title,
  serviceType: 'Computer repair & IT support',
  description: desc,
  url,
  areaServed: { '@type': 'City', name: 'Stellenbosch' },
  provider: { '@id': `${site}#localbusiness` },
  ...(priceNum
    ? {
        offers: {
          '@type': 'Offer',
          priceCurrency: 'ZAR',
          price: priceNum,
          availability: 'https://schema.org/InStock',
          url,
        },
      }
    : {}),
};

const faqLd =
  Array.isArray(data.faq) && data.faq.length
    ? {
        '@context': 'https://schema.org',
        '@type': 'FAQPage',
        mainEntity: data.faq.map((f: { q: string; a: string }) => ({
          '@type': 'Question',
          name: f.q,
          acceptedAnswer: { '@type': 'Answer', text: f.a },
        })),
      }
    : null;

const pageTitle = `${data.title} — Digissential`;
const pageDesc =
  data.summary || `${data.title} in Stellenbosch. Transparent pricing and fast turnaround.`;
---

<Base title={pageTitle} description={pageDesc} ogImage="/favicon.svg">
  <main class="container-prose pt-28">
    <Breadcrumbs
      items={[
        { href: '/', label: 'Home' },
        { href: '/services/', label: 'Services' },
        { href: `${Astro.url.pathname.endsWith('/') ? Astro.url.pathname : Astro.url.pathname + '/'}`, label: data.title },
      ]}
    />

    <h1 class="text-3xl sm:text-4xl font-extrabold">{data.title}</h1>
    <p class="mt-2 text-white/80">
      Serving Stellenbosch &amp; surrounds • Transparent pricing • POPIA-aligned
    </p>

    <div class="mt-6 grid gap-6 md:grid-cols-3">
      <!-- LEFT: main content -->
      <section class="md:col-span-2 card p-6 prose prose-invert">
        <h2>What’s included</h2>
        <ul>
          {(data.bullets ?? []).map((b: string) => <li>{b}</li>)}
        </ul>

        <h2>Details</h2>
        <Content />

        {Array.isArray(data.faq) && data.faq.length > 0 && (
          <section class="card p-6 mt-6">
            <h2 class="text-xl font-bold mb-3">FAQ</h2>
            <ul class="space-y-4">
              {data.faq.map((f: { q: string; a: string }) => (
                <li>
                  <p class="font-semibold">{f.q}</p>
                  <p class="text-white/80">{f.a}</p>
                </li>
              ))}
            </ul>
          </section>
        )}
      </section>

      <!-- RIGHT: price card -->
      <aside class="card p-6 h-max">
        {priceDisplay && <>
          <p class="text-sm text-white/60">From</p>
          <p class="text-4xl font-extrabold text-digi-primary">{priceDisplay}</p>
        </>}
        <div class="mt-4 grid gap-2">
          <Button href="/contact">Get a free quote</Button>
          <Button href="tel:+27664256314" variant="secondary">Call now</Button>
        </div>
        <p class="mt-4 text-xs text-white/60">
          Turnaround depends on parts, updates, and queue.
        </p>
      </aside>
    </div>
  </main>

  <script type="application/ld+json">{JSON.stringify(serviceLd)}</script>
  {faqLd && <script type="application/ld+json">{JSON.stringify(faqLd)}</script>}
</Base>

---
export const prerender = true;

import Base from "@layouts/Base.astro";
import Section from "@components/Section.astro";
import BundleCard from "@components/BundleCard.astro";
import { getCollection } from "astro:content";

// 1) Build-time paths for all non-draft bundle slugs
export async function getStaticPaths() {
  const bundles = await getCollection("bundles", ({ data }) => !data.draft);
  return bundles.map((b) => ({
    params: { slug: b.slug },
    props: { entry: b }, // pass the whole entry as a prop
  }));
}

// 2) Use the pre-fetched entry (and optionally fetch others for "related")
const { entry } = Astro.props;
if (!entry) throw new Error("Bundle not found");

const {
  title,
  price = "",
  summary = "",
  bullets = [],
  faq = [],
  cta_text = "Book this bundle",
  cta_link = "/contact",
  ideal_for = "",
  save = "",
} = entry.data;

// --- Services index (for internal links) ---
const allServices = await getCollection("services", ({ data }) => !data.draft);
const svcIndex: Record<string, { title: string; href: string }> = {};
for (const s of allServices) {
  const t = (s.data.navTitle as string) || (s.data.title as string);
  svcIndex[s.slug] = { title: t, href: `/services/${s.slug}/` };
}
const findSvc = (slug: string) => svcIndex[slug];

// Curated mapping: bundle -> included service slugs
const INCLUDED: Record<string, string[]> = {
  "data-rescue-wipe": [
    "data-recovery",
    "data-migration",
    "data-destruction-certified-wipe",
  ],
  "fresh-start-reinstall-backup": [
    "windows-reinstall-and-backup",
    "driver-installation",
    "cybersecurity-hardening",
  ],
  "home-wifi-printer": [
    "mesh-wifi-planning-install",
    "printer-setup",
    "wifi-network-troubleshooting",
  ],
  "malware-clean-protect": [
    "virus-malware-removal",
    "speedup-tuneup",
    "cybersecurity-hardening",
  ],
  "new-pc-setup-transfer": [
    "new-pc-laptop-setup",
    "data-migration",
    "email-setup",
    "software-installation-bulk",
  ],
  "ssd-speed-boost": [
    "ssd-upgrade-bundle-clone-swap",
    "thermal-paste-deep-clean",
    "firmware-bios-uefi-updates",
  ],
};

// Optional extras
const ADDONS: Record<string, string[]> = {
  "data-rescue-wipe": ["cloud-backup-setup", "diagnostic-in-shop"],
  "fresh-start-reinstall-backup": [
    "data-backup-basic",
    "password-reset-windows-local",
  ],
  "home-wifi-printer": ["remote-support-setup"],
  "malware-clean-protect": ["data-backup-basic", "password-reset-windows-local"],
  "new-pc-setup-transfer": ["cloud-backup-setup", "printer-setup"],
  "ssd-speed-boost": ["windows-reinstall", "data-backup-full-system-image"],
};

// Heuristic fallback for new bundles
function guessIncludesFrom(title: string): string[] {
  const t = title.toLowerCase();
  const picks: string[] = [];
  const push = (slug: string) => !picks.includes(slug) && findSvc(slug) && picks.push(slug);

  if (t.includes("rescue") || t.includes("wipe")) {
    push("data-recovery"); push("data-migration"); push("data-destruction-certified-wipe");
  }
  if (t.includes("reinstall")) {
    push("windows-reinstall-and-backup"); push("driver-installation"); push("cybersecurity-hardening");
  }
  if (t.includes("wi-fi") || t.includes("wifi") || t.includes("printer")) {
    push("mesh-wifi-planning-install"); push("printer-setup"); push("wifi-network-troubleshooting");
  }
  if (t.includes("malware")) {
    push("virus-malware-removal"); push("speedup-tuneup"); push("cybersecurity-hardening");
  }
  if (t.includes("new pc") || t.includes("transfer")) {
    push("new-pc-laptop-setup"); push("data-migration"); push("email-setup"); push("software-installation-bulk");
  }
  if (t.includes("ssd") || t.includes("speed")) {
    push("ssd-upgrade-bundle-clone-swap"); push("thermal-paste-deep-clean"); push("firmware-bios-uefi-updates");
  }
  return picks.slice(0, 4);
}

// Resolve included/addons into concrete links
const bundleSlug = entry.slug;
const includeSlugs = (INCLUDED[bundleSlug] ?? guessIncludesFrom(title)).filter(findSvc);
const addonSlugs = (ADDONS[bundleSlug] ?? []).filter(findSvc);

const includedServices = includeSlugs.map((s) => findSvc(s)!);
const addonServices = addonSlugs.map((s) => findSvc(s)!);

// Related bundles
const allBundles = await getCollection("bundles", ({ data }) => !data.draft);
const related = allBundles
  .filter((b) => b.slug !== entry.slug)
  .sort(
    (a, b) =>
      (b.data.featured ? 1 : 0) - (a.data.featured ? 1 : 0) ||
      a.slug.localeCompare(b.slug)
  )
  .slice(0, 3);

// Helpers
const urlFor = (p: string) => (Astro.site ? new URL(p, Astro.site).href : p);
const priceNumber = Number((price || "").replace(/[^\d.]/g, "")) || undefined;

// JSON-LD
const productLd: any = {
  "@context": "https://schema.org",
  "@type": "Product",
  name: title,
  description: summary,
  url: urlFor(`/bundles/${entry.slug}/`),
  brand: { "@type": "Brand", name: "Digissential" },
  hasPart: includedServices.map((s) => ({
    "@type": "Service",
    name: s.title,
    url: urlFor(s.href),
  })),
  ...(priceNumber
    ? {
        offers: {
          "@type": "Offer",
          price: String(priceNumber),
          priceCurrency: "ZAR",
          url: urlFor(`/bundles/${entry.slug}/`),
        },
      }
    : {}),
};

const breadcrumbLd = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    { "@type": "ListItem", position: 1, name: "Home", item: urlFor("/") },
    { "@type": "ListItem", position: 2, name: "Bundles", item: urlFor("/bundles/") },
    { "@type": "ListItem", position: 3, name: title, item: urlFor(`/bundles/${entry.slug}/`) },
  ],
};

const faqLd =
  Array.isArray(faq) && faq.length
    ? {
        "@context": "https://schema.org",
        "@type": "FAQPage",
        mainEntity: faq.map((x: any) => ({
          "@type": "Question",
          name: x.q,
          acceptedAnswer: { "@type": "Answer", text: x.a },
        })),
      }
    : null;

const pageTitle = `${title} — Bundles`;
const description = summary;
---

<Base title={`${pageTitle} | Digissential`} description={description}>
  <Section id="bundle" eyebrow="Bundles" title={title} description={summary}>
    <!-- Breadcrumbs -->
    <nav class="mb-5 text-sm" aria-label="Breadcrumb">
      <ol class="flex flex-wrap items-center gap-2 text-white/70">
        <li><a class="hover:underline text-white/80" href="/">Home</a></li>
        <li aria-hidden="true">/</li>
        <li><a class="hover:underline text-white/80" href="/bundles/">Bundles</a></li>
        <li aria-hidden="true">/</li>
        <li class="text-white">{title}</li>
      </ol>
    </nav>

    <!-- Layout -->
    <div class="grid gap-6 lg:grid-cols-[minmax(0,1fr),360px]">
      <!-- Main content -->
      <article class="min-w-0">
        <section>
          <h2 class="text-xl font-semibold text-white">What’s included</h2>
          <ul class="mt-3 space-y-2 text-slate-200">
            {bullets.map((b: string) => (
              <li class="flex gap-2 leading-relaxed">
                <span class="mt-2 h-1.5 w-1.5 rounded-full bg-gradient-to-r from-sky-400 to-fuchsia-400"></span>
                <span class="grow">{b}</span>
              </li>
            ))}
          </ul>
        </section>

        {includedServices.length > 0 && (
          <section class="mt-4">
            <h3 class="font-semibold text-white">Included services</h3>
            <ul class="mt-2 grid gap-2 sm:grid-cols-2">
              {includedServices.map((s) => (
                <li>
                  <a href={s.href} class="svc-pill" aria-label={`Open ${s.title}`}>
                    {s.title}
                  </a>
                </li>
              ))}
            </ul>
          </section>
        )}

        {addonServices.length > 0 && (
          <section class="mt-4">
            <h3 class="font-semibold text-white">Useful add-ons</h3>
            <ul class="mt-2 flex flex-wrap gap-2">
              {addonServices.map((s) => (
                <li><a href={s.href} class="addon-chip">{s.title}</a></li>
              ))}
            </ul>
          </section>
        )}

        {Array.isArray(faq) && faq.length > 0 && (
          <section class="mt-8">
            <h2 class="text-xl font-semibold text-white">FAQ</h2>
            <div class="mt-3 space-y-3">
              {faq.map((item: any) => (
                <details class="rounded-xl bg-slate-900/60 p-4 border border-slate-800">
                  <summary class="cursor-pointer text-white font-medium">{item.q}</summary>
                  <p class="mt-2 text-slate-300 leading-relaxed">{item.a}</p>
                </details>
              ))}
            </div>
          </section>
        )}

        <p class="mt-8 text-sm text-white/70">
          Flat rate includes labour. Parts and paid licences are separate. On-site travel may apply outside our local radius.
          We follow POPIA for privacy and issue certificates for standards-aligned secure wipes where relevant.
        </p>
      </article>

      <!-- Sticky neon CTA panel -->
      <aside class="lg:sticky lg:top-24">
        <div
          class="group relative rounded-2xl p-[1px]
                 bg-gradient-to-br from-sky-400/70 via-fuchsia-500/70 to-cyan-400/70
                 shadow-[0_16px_48px_-12px] shadow-cyan-400/30
                 transform-gpu transition-[transform,box-shadow] duration-300 hover:-translate-y-1 hover:shadow-cyan-400/40"
        >
          <div class="rounded-2xl bg-slate-950/85 border border-white/10 p-5 sm:p-6">
            <div class="flex items-start justify-between gap-3">
              <!-- Title uses remaining space so the chip never wraps -->
              <h3 class="text-white font-semibold flex-1 min-w-0">{title}</h3>
              {price && (
                <span
                  class="shrink-0 whitespace-nowrap leading-none
                         inline-flex items-center justify-center
                         rounded-lg px-2.5 py-1 text-sm font-bold
                         bg-sky-500/15 text-sky-100 ring-1 ring-sky-300/40"
                >
                  {String(price || "").replace(/\s/g, "\u00A0")}
                </span>
              )}
            </div>

            <p class="mt-2 text-slate-300">{summary}</p>

            <div class="mt-5 flex flex-col gap-2">
              <a
                href={cta_link}
                class="inline-flex items-center justify-center rounded-xl px-4 py-2 font-medium
                       bg-gradient-to-r from-sky-500 to-fuchsia-500 text-white
                       shadow-[0_12px_32px_-10px] shadow-fuchsia-500/40
                       hover:from-sky-400 hover:to-fuchsia-400
                       focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-400
                       focus-visible:ring-offset-2 focus-visible:ring-offset-slate-900 transition"
              >
                {cta_text}
              </a>
              <a
                href="/contact/?reason=bundle"
                class="inline-flex items-center justify-center rounded-xl px-4 py-2 font-medium
                       bg-slate-800/80 text-white hover:bg-slate-700
                       focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-400
                       focus-visible:ring-offset-2 focus-visible:ring-offset-slate-900 transition"
              >
                Ask a question
              </a>
              <a
                href="tel:+27664256314"
                class="inline-flex items-center justify-center rounded-xl px-4 py-2 font-medium
                       bg-slate-900/70 text-white/90 hover:bg-slate-800
                       focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-400
                       focus-visible:ring-offset-2 focus-visible:ring-offset-slate-900 transition"
              >
                Call 066 425 6314
              </a>
            </div>
          </div>

          <span
            aria-hidden="true"
            class="pointer-events-none absolute -inset-1 rounded-3xl opacity-0
                   group-hover:opacity-80 blur-2xl group-hover:blur-[32px]
                   transform-gpu transition-[opacity,filter,transform] duration-300
                   group-hover:scale-105
                   bg-[radial-gradient(60%_60%_at_30%_10%,rgba(56,189,248,0.40),transparent),radial-gradient(50%_50%_at_80%_30%,rgba(217,70,239,0.35),transparent)]"
          />
        </div>

        {(ideal_for || save) && (
          <div class="mt-4 grid gap-3">
            {ideal_for && (
              <div class="rounded-xl border border-slate-800 bg-slate-900/60 p-4">
                <h3 class="font-semibold text-white text-base">Best for</h3>
                <p class="mt-1 text-slate-300 text-[0.95rem] leading-relaxed">{ideal_for}</p>
              </div>
            )}
            {save && (
              <div class="rounded-xl border border-slate-800 bg-slate-900/60 p-4">
                <h3 class="font-semibold text-white text-base">Why this bundle</h3>
                <p class="mt-1 text-slate-300 text-[0.95rem] leading-relaxed">{save}</p>
              </div>
            )}
          </div>
        )}
    </div>

    {related.length > 0 && (
      <section class="mt-14">
        <h2 class="text-xl font-semibold text-white">You might also like</h2>
        <div class="mt-4 grid auto-rows-fr gap-6 md:gap-7 sm:grid-cols-2 xl:grid-cols-3">
          {related.map((b) => (
            <BundleCard
              slug={b.slug}
              title={b.data.title}
              price={b.data.price}
              summary={b.data.summary}
              bullets={b.data.bullets}
              save={b.data.save}
              cta_text={b.data.cta_text}
              cta_link={b.data.cta_link}
              variant="home"
            />
          ))}
        </div>
      </section>
    )}

    <!-- JSON-LD -->
    <script type="application/ld+json" set:html={JSON.stringify(productLd)}></script>
    <script type="application/ld+json" set:html={JSON.stringify(breadcrumbLd)}></script>
    {faqLd && <script type="application/ld+json" set:html={JSON.stringify(faqLd)}></script>}
  </Section>

  <style>
    .svc-pill{
      display:inline-flex; align-items:center; gap:.5rem;
      width:100%; padding:.6rem .8rem;
      border-radius:.9rem;
      background: rgba(15,23,42,.6);
      border:1px solid rgba(148,163,184,.25);
      color:#e6f0ff; text-decoration:none;
      transition: background .2s ease, border-color .2s ease, transform .2s ease;
    }
    .svc-pill:hover{ background: rgba(30,41,59,.7); border-color: rgba(148,163,184,.45); transform: translateY(-1px); }

    .addon-chip{
      display:inline-flex; align-items:center;
      padding:.4rem .65rem; border-radius:.75rem;
      background: rgba(2,6,23,.55);
      border:1px dashed rgba(148,163,184,.35);
      color:#dbeafe; text-decoration:none; font-size:.9rem;
      transition: background .2s ease, border-color .2s ease, transform .2s ease;
    }
    .addon-chip:hover{ background: rgba(30,41,59,.65); border-color: rgba(148,163,184,.6); transform: translateY(-1px); }
  </style>
</Base>

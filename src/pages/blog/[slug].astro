---
import Base from '@layouts/Base.astro';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import { getCollection } from 'astro:content';

const { slug } = Astro.params;

// Get posts, sorted newest -> oldest
const posts = (await getCollection('blog'))
  .filter(p => !p.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Find this post
const idx = posts.findIndex(p => p.slug === slug);
if (idx === -1) throw new Error('Post not found');

const entry = posts[idx];
const front = entry.data;                 // <-- use `front`, not `data`
const { Content } = await entry.render();

const prev = posts[idx + 1];              // older post
const next = posts[idx - 1];              // newer post

// reading time (fallback if not provided)
const minutes = front.readingTime?.minutes
  ? Math.max(1, Math.round(front.readingTime.minutes))
  : Math.max(1, Math.round(String(front.description || '').split(/\s+/).filter(Boolean).length / 180));

const site = Astro.site?.toString?.() || 'http://localhost:4321';
const canonical = new URL(`/blog/${entry.slug}`, site).toString();

// Article JSON-LD
const articleLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": front.title,
  "description": front.description,
  "datePublished": new Date(front.pubDate).toISOString(),
  "dateModified": new Date(front.updatedDate || front.pubDate).toISOString(),
  "author": { "@type": "Organization", "name": front.author || "Digissential Team" },
  "mainEntityOfPage": canonical,
  "url": canonical
};
---

<Base title={`${front.title} — Digissential`} description={front.description}>
  <main class="container-prose pt-6">
    <Breadcrumbs items={[
      { href: '/', label: 'Home' },
      { href: '/blog', label: 'Blog' },
      { href: `/blog/${entry.slug}`, label: front.title }
    ]} />

    <article class="mt-6">
      <!-- Branded header -->
      <header class="relative overflow-hidden rounded-3xl border border-white/5 bg-gradient-to-br from-white/[0.03] to-white/[0.01] p-6 sm:p-8">
        <svg aria-hidden="true" class="pointer-events-none absolute inset-0 h-full w-full opacity-[0.07]">
          <defs>
            <pattern id="grid" width="32" height="32" patternUnits="userSpaceOnUse">
              <path d="M32 0H0V32" fill="none" stroke="currentColor" stroke-width="0.75"/>
            </pattern>
            <radialGradient id="glow" cx="50%" cy="0%" r="80%">
              <stop offset="0%"  stop-color="rgb(56 189 248)" stop-opacity="0.25"/>
              <stop offset="100%" stop-color="transparent"/>
            </radialGradient>
          </defs>
          <rect width="100%" height="100%" fill="url(#grid)"/>
          <rect width="120%" height="60%" x="-10%" y="-10%" fill="url(#glow)"/>
        </svg>

        <div class="relative">
          <h1 class="text-3xl sm:text-4xl font-extrabold">{front.title}</h1>
          <p class="mt-2 text-white/70 max-w-2xl">{front.description}</p>
          <p class="mt-3 text-white/60 text-sm">
            <time datetime={new Date(front.pubDate).toISOString()}>
              {new Date(front.pubDate).toLocaleDateString()}
            </time>
            {' · '}
            <span>{front.author || 'Digissential Team'}</span>
            {' · '}
            <span>{minutes} min read</span>
          </p>

          {front.tags && front.tags.length > 0 && (
            <p class="mt-3 flex flex-wrap gap-2">
              {front.tags.map((t: string) => {
                const slug = t.toLowerCase();
                return <a class="chip" href={`/blog?tag=${encodeURIComponent(slug)}`}>{t}</a>;
              })}
            </p>
          )}
        </div>
      </header>

      <!-- Article body -->
      <div class="prose prose-invert max-w-none mt-8">
        <Content />
      </div>

      <hr class="my-10 border-white/10" />

      <nav class="flex flex-wrap gap-3 justify-between items-center">
        <div>
          {prev && <a class="btn btn-outline" href={`/blog/${prev.slug}`}>&larr; {prev.data.title}</a>}
        </div>
        <a class="link-fancy" href="/blog">Back to all posts</a>
        <div>
          {next && <a class="btn btn-outline" href={`/blog/${next.slug}`}>{next.data.title} &rarr;</a>}
        </div>
      </nav>

      <script type="application/ld+json">{JSON.stringify(articleLd)}</script>
    </article>
  </main>

  <style>
    .chip {
      @apply inline-flex items-center gap-1 rounded-full border border-white/10 bg-white/5 px-3 py-1 text-xs text-white/80 hover:text-white hover:border-white/20 transition;
      white-space: nowrap;
    }
  </style>
</Base>
